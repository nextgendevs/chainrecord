{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte"
  ],
  "sourcesContent": [
    "<script>\nimport { onMount } from 'svelte';\n let VaultContract;\n let account ;\n\n//import Page from './Page.svelte' ;\n//const fm = new Fortmatic('pk_test_7F64757BB0C010B6', 'kovan');\n//window.web3 = new Web3(fm.getProvider());\nlet bLoading = true, abisData;\n\nonMount(\n\t\tasync () => {\n\t\t  window.web3 = await loadBlockchainData();\n\t\t//  bLoading = false;\n\t\t  loadSmartContract();\n\t\t}\n\n  );\n\n\t async function loadBlockchainData(){\n\t\t\tconst fm = new Fortmatic('pk_test_7F64757BB0C010B6', 'kovan');\n\t\t\treturn new Web3(fm.getProvider());\n\t }\n\n \tasync function loadSmartContract(){\n\tconst web3 = window.web3 ;\n\tconst accounts = await web3.eth.getAccounts();\n\taccount= accounts[0];\n\n\tawait fetch('/abis/abis.json').then((response) => {\n    return response.json();\n  }).then((myJson) => {\n\tabisData = myJson;\n  });\n\n  const networkId = await web3.eth.net.getId();\n  const netData = abisData.networks[networkId];\n\n\n  if(netData)\n     { \n      const abi = abisData.abi;\n      const address = netData.address\n   VaultContract = await new web3.eth.Contract(abi, address) ; //\n   bLoading = false;\n   loadTableData();\n\t }\n  }\n  let TableData = [];\n  async function loadTableData(){\n\n\tTableData = [];\nif(VaultContract && account)\n{\n\n\tlet awbs = [1001,1002, 1003];\n\n\tawbs.forEach(function(ele){\n\t\tVaultContract.methods.getAssignment(ele).call({\n      from : account\n   }).then( (data) => {\n\tdata.awb = ele;\n    TableData = [...TableData, data];\n   });\n\t})\n\n}\n  }\n\n  async function ReceiveGoods(oEvent){\n\t\n\tlet awb = +this.name;\n\n\t\n\tVaultContract.methods.receiveGoods(awb).call({\n      from : account\n   }).then( (data) => {\n\tloadTableData();\n   }, (error) => {\n\t   console.debug(error);\n   });\n\n  }\n\n\n</script>\n\n<main>\n\t{#if bLoading}\n\t<div class=\"spinner-grow\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\n\t\t<span class=\"sr-only\">Loading...</span>\n\t  </div>\n\t<h6>Initalizing Web App....</h6>\n\t{:else}\n\t<nav class=\"navbar navbar-light\" style=\"background-color: #e3f2fd;\">\n\t\t<a class=\"navbar-brand\" href=\"#\">\n\t\t  <img src=\"/icon.jpg\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\n\t\t CHAINrecord\n\t\t</a>\t  \n\t  </nav>\n\t<table class=\"table\">\n\n\n\t\t<thead class=\"thead-dark\">\n\t\t  <tr>\n\t\t\t<th scope=\"col\">#</th>\n\t\t\t<th scope=\"col\">Origin</th>\n\t\t\t<th scope=\"col\">Destnation</th>\n\t\t\t<th scope=\"col\">Status</th>\n\t\t\t<th scope=\"col\">Message</th>\n\t\t\t<th scope=\"col\">Action</th>\n\t\t  </tr>\n\t\t</thead>\n\t\t<tbody>\n\t  \n\t\t{#if TableData.length }\n\t\t\n\t\t{#each TableData as ele, i}\n\t\t  <tr>\n\t\t\t<th scope=\"row\">{ele.awb}</th>\n\t\t\t <td>{ele[0]}</td>\n\t\t\t<td>{ele[1]}</td>\n\t\t\t<td>{ele[4]}</td>\n\t\t\t<td>{ele[5]}</td>\n\t\t\t<td>\n\t\t\t\t{#if ele[4] == 'Ready for Retrival' }\n\t\t\t\t<button type=\"button\" name=\"{ele.awb}\"  on:click= {ReceiveGoods} class=\"btn btn-primary margin-half \" >\n\t\t\t\tReceive Goods\n\t\t\t  </button>\n\t\t\t  {/if}\n\t\t\t</td>\n\t\t  </tr>\n\t\t{/each}\n\t\t\n\t\t {:else}\n\t   <div class=\"spinner-border text-dark\" role=\"status\">\n\t\t<span class=\"sr-only\">Loading...</span>\n\t  </div>\n\t\t {/if} \n\t\t</tbody>\n\t  </table>\n\t{/if}\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "AAiJC,IAAI,eAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AASD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC"
}